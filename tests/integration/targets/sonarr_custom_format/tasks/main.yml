---
- name: Create custom format
  devopsarr.sonarr.sonarr_custom_format:
    include_custom_format_when_renaming: false
    name: Language
    specifications:
      - name: arabic
        implementation: LanguageSpecification
        negate: false
        required: true
        fields:
          - name: value
            value: 26
    sonarr_api_key: "{{ sonarr_api_key }}"
    sonarr_url: "{{ sonarr_url }}"
  register: result
- name: Assert custom format creation
  ansible.builtin.assert:
    that:
      - result['name'] == 'Language'
# ----------------------------------------------------------------------------
- name: Edit already present custom format
  devopsarr.sonarr.sonarr_custom_format:
    include_custom_format_when_renaming: false
    name: Language
    specifications:
      - name: arabic
        implementation: LanguageSpecification
        negate: false
        required: true
        fields:
          - name: value
            value: 25
    sonarr_api_key: "{{ sonarr_api_key }}"
    sonarr_url: "{{ sonarr_url }}"
  register: result
- name: Assert custom format changes
  ansible.builtin.assert:
    that:
      - result.changed == true
# ----------------------------------------------------------------------------
- name: Edit already present custom format
  devopsarr.sonarr.sonarr_custom_format:
    include_custom_format_when_renaming: false
    name: Language
    specifications:
      - name: MULTi
        implementation: ReleaseTitleSpecification
        negate: false
        required: false
        fields:
          - name: value
            value: \b(MULTi(?![ .-]subs?))(\d|\b)
      - name: VO and VF
        implementation: ReleaseTitleSpecification
        negate: false
        required: false
        fields:
          - name: value
            value: ^(?=.*\b(VO(ST(FR)?)?)\b)(?=.*\b(VF[FIQ2]?)\b)
    sonarr_api_key: "{{ sonarr_api_key }}"
    sonarr_url: "{{ sonarr_url }}"
  register: result
- name: Assert custom format changes
  ansible.builtin.assert:
    that:
      - result.changed == true
# ----------------------------------------------------------------------------
- name: Test idempotency
  devopsarr.sonarr.sonarr_custom_format:
    include_custom_format_when_renaming: false
    name: Language
    specifications:
      - name: MULTi
        implementation: ReleaseTitleSpecification
        negate: false
        required: false
        fields:
          - name: value
            value: \b(MULTi(?![ .-]subs?))(\d|\b)
      - name: VO and VF
        implementation: ReleaseTitleSpecification
        negate: false
        required: false
        fields:
          - name: value
            value: ^(?=.*\b(VO(ST(FR)?)?)\b)(?=.*\b(VF[FIQ2]?)\b)
    sonarr_api_key: "{{ sonarr_api_key }}"
    sonarr_url: "{{ sonarr_url }}"
  register: result
- name: Assert custom format idempotency
  ansible.builtin.assert:
    that:
      - result.changed == false
# ----------------------------------------------------------------------------
- name: Test reduction
  devopsarr.sonarr.sonarr_custom_format:
    include_custom_format_when_renaming: false
    name: Language
    specifications:
      - name: MULTi
        implementation: ReleaseTitleSpecification
        negate: false
        required: false
        fields:
          - name: value
            value: \b(MULTi(?![ .-]subs?))(\d|\b)
    sonarr_api_key: "{{ sonarr_api_key }}"
    sonarr_url: "{{ sonarr_url }}"
  register: result
- name: Assert custom format idempotency
  ansible.builtin.assert:
    that:
      - result.changed == true
# ----------------------------------------------------------------------------
- name: Delete custom format
  devopsarr.sonarr.sonarr_custom_format:
    name: Language
    sonarr_api_key: "{{ sonarr_api_key }}"
    sonarr_url: "{{ sonarr_url }}"
    state: absent
  register: result
- name: Assert custom format deletion
  ansible.builtin.assert:
    that:
      - result['id'] == 0
